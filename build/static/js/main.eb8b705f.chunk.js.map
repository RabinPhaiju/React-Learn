{"version":3,"sources":["components/Nav.js","components/pages/About.js","components/pages/Shop.js","components/pages/Home.js","components/task_tracker/Button.js","components/task_tracker/Header.js","components/task_tracker/Task.js","components/task_tracker/Tasks.js","components/task_tracker/AddTask.js","components/pages/TaskTracker.js","components/pathfindingVisualizer/node/Node.js","components/pathfindingVisualizer/algorithms/dijkstra.js","components/pathfindingVisualizer/PathfindingVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","textDecoration","to","style","className","About","Shop","Home","Button","text","onclick","backgroundColor","onClick","defaultProps","Header","title","toggleAddButton","Task","task","onDelete","setReminder","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","addTask","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","appStyle","TaskTracker","setTask","addButton","setAddButton","Math","floor","random","newTask","length","filter","node","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","neighbor","getUnvisitedNeighbors","previousNode","getInitialGrid","currentRow","createNode","getNewGridWithWallToggled","newGrid","slice","newNode","PathfindingVisualizer","React","setGrid","mouseIsPressed","setMouseIsPressed","useEffect","animateShortestPath","nodesInShortestPathOrder","i","setTimeout","document","getElementById","visualizeDijkstra","animateDijkstra","currentNode","unshift","getNodesInShortestPathOrder","rowIdx","nodeIdx","handleMouseDown","handleMouseEnter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb8b705f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  const navStyle = {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  };\r\n  return (\r\n    <nav>\r\n      <Link to='/' style={navStyle}>\r\n        <h3>Logo</h3>\r\n      </Link>\r\n\r\n      <div className='nav'>\r\n        <Link to='/React-Learn/about' style={navStyle}>\r\n          <div className='nav-item'>about</div>\r\n        </Link>\r\n        <Link to='/React-Learn/shop' style={navStyle}>\r\n          <div className='nav-item'>shop</div>\r\n        </Link>\r\n        <Link to='/React-Learn/taskTracker' style={navStyle}>\r\n          <div className='nav-item'>Task Tracker</div>\r\n        </Link>\r\n        <Link to='/React-Learn/dijkstra' style={navStyle}>\r\n          <div className='nav-item'>Dijkstra</div>\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className='App'>\r\n      <h1>About page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Shop = () => {\r\n  return (\r\n    <div className='App'>\r\n      <h1>Shop page</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <div>Homepage</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onclick }) => {\r\n  return (\r\n    <button style={{ backgroundColor: color }} className='btn' onClick={onclick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"#565428\",\r\n};\r\n\r\nButton.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onclick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, text, color, toggleAddButton }) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button color={color} text={text} onclick={toggleAddButton} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tasker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, setReminder }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => setReminder(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes style={{ color: \"red\", cursor: \"pointer\" }} onClick={() => onDelete(task.id)} />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, setReminder }) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} setReminder={setReminder} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add Text\");\r\n      return;\r\n    }\r\n    addTask({ text, day, reminder });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label htmlFor='Task'>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor='Day & Time'>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label htmlFor='Set Reminder'>Set Reminder</label>\r\n        <input type='checkbox' value={reminder} onChange={(e) => setReminder(!reminder)} />\r\n      </div>\r\n      <input type='submit' className='btn btn-block' value='Save Task' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from \"react\";\r\nimport Header from \"../task_tracker/Header\";\r\nimport Tasks from \"../task_tracker/Tasks\";\r\nimport AddTask from \"../task_tracker/AddTask\";\r\n\r\nfunction TaskTracker() {\r\n  const [tasks, setTask] = useState([\r\n    {\r\n      id: 0,\r\n      text: \"Doctor Appointment\",\r\n      day: \"Feb 5th 2:30pm\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      text: \"Dance Class\",\r\n      day: \"Feb 5th 2:30pm\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Dating\",\r\n      day: \"Feb 5th 2:30pm\",\r\n      reminder: true,\r\n    },\r\n  ]);\r\n  const [addButton, setAddButton] = useState(false);\r\n\r\n  // Delete Task\r\n  const deleteTask = (id) => {\r\n    setTask(tasks.filter((task) => task.id !== id));\r\n  };\r\n  const setReminder = (id) => {\r\n    setTask(\r\n      tasks.map((task) => (task.id === id ? { ...task, reminder: !task.reminder } : { ...task }))\r\n    );\r\n  };\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    // console.log(task);\r\n    const id = Math.floor(Math.random() * 1000) + 2;\r\n    const newTask = { id, ...task };\r\n    setTask([...tasks, newTask]);\r\n  };\r\n\r\n  return (\r\n    <div style={appStyle} className='container'>\r\n      <Header\r\n        title='Task Tasker'\r\n        text={addButton ? \"Close\" : \"Add\"}\r\n        color={addButton ? \"red\" : \"green\"}\r\n        toggleAddButton={() => setAddButton(!addButton)}\r\n      />\r\n      {addButton && <AddTask addTask={addTask} />}\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} onDelete={deleteTask} setReminder={setReminder} />\r\n      ) : (\r\n        <p>No Tasks</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst appStyle = {\r\n  // textAlign: \"center\",\r\n};\r\n\r\nexport default TaskTracker;\r\n","import React from \"react\";\r\n\r\nimport \"./Node.css\";\r\n\r\nconst node = ({ col, isFinish, isStart, isWall, onMouseDown, onMouseEnter, onMouseUp, row }) => {\r\n  const extraClassName = isFinish\r\n    ? \"node-finish\"\r\n    : isStart\r\n    ? \"node-start\"\r\n    : isWall\r\n    ? \"node-wall\"\r\n    : \"\";\r\n\r\n  return (\r\n    <div\r\n      id={`node-${row}-${col}`}\r\n      className={`node ${extraClassName}`}\r\n      onMouseDown={() => onMouseDown(row, col)}\r\n      onMouseEnter={() => onMouseEnter(row, col)}\r\n      onMouseUp={() => onMouseUp()}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default node;\r\n","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Node from \"./node/Node\";\r\nimport { dijkstra, getNodesInShortestPathOrder } from \"./algorithms/dijkstra\";\r\n\r\nimport \"./PathfindingVisualizer.css\";\r\n\r\nconst START_NODE_ROW = 10;\r\nconst START_NODE_COL = 15;\r\nconst FINISH_NODE_ROW = 10;\r\nconst FINISH_NODE_COL = 35;\r\n\r\nconst PathfindingVisualizer = () => {\r\n  const [grid, setGrid] = React.useState([]);\r\n  const [mouseIsPressed, setMouseIsPressed] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const grid = getInitialGrid();\r\n    setGrid(grid);\r\n  }, []);\r\n\r\n  const handleMouseDown = (row, col) => {\r\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\r\n    setGrid(newGrid);\r\n    setMouseIsPressed(true);\r\n  };\r\n  const handleMouseEnter = (row, col) => {\r\n    if (!mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(grid, row, col);\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setMouseIsPressed(false);\r\n  };\r\n\r\n  const animateDijkstra = (visitedNodesInOrder, nodesInShortestPathOrder) => {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          animateShortestPath(nodesInShortestPathOrder);\r\n        }, 10 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className = \"node node-visited\";\r\n      }, 10 * i);\r\n    }\r\n  };\r\n  const animateShortestPath = (nodesInShortestPathOrder) => {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-shortest-path\";\r\n      }, 50 * i);\r\n    }\r\n  };\r\n\r\n  const visualizeDijkstra = () => {\r\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = grid[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='button' onClick={() => visualizeDijkstra()}>\r\n        Visualize Dijkstra's Algorithm\r\n      </button>\r\n      <div className='grid'>\r\n        {grid.map((row, rowIdx) => {\r\n          return (\r\n            <div key={rowIdx}>\r\n              {row.map((node, nodeIdx) => {\r\n                const { row, col, isFinish, isStart, isWall } = node;\r\n                return (\r\n                  <Node\r\n                    key={nodeIdx}\r\n                    col={col}\r\n                    isFinish={isFinish}\r\n                    isStart={isStart}\r\n                    isWall={isWall}\r\n                    mouseIsPressed={mouseIsPressed}\r\n                    onMouseDown={(row, col) => handleMouseDown(row, col)}\r\n                    onMouseEnter={(row, col) => handleMouseEnter(row, col)}\r\n                    onMouseUp={() => handleMouseUp()}\r\n                    row={row}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getInitialGrid = () => {\r\n  const grid = [];\r\n  for (let row = 0; row < 20; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 50; col++) {\r\n      currentRow.push(createNode(col, row));\r\n      // console.log(currentRow);\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n};\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n  };\r\n};\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nexport default PathfindingVisualizer;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport About from \"./components/pages/About\";\r\nimport Shop from \"./components/pages/Shop\";\r\nimport Home from \"./components/pages/Home\";\r\n\r\nimport TaskTracker from \"./components/pages/TaskTracker\";\r\n\r\nimport PathfindingVisualizer from \"./components/pathfindingVisualizer/PathfindingVisualizer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='App'>\r\n        <Nav />\r\n        <Switch>\r\n          <Route path='/React-Learn' exact component={Home} />\r\n          <Route path='/React-Learn/about' exact component={About} />\r\n          <Route path='/React-Learn/shop' exact component={Shop} />\r\n          <Route path='/React-Learn/taskTracker' exact component={TaskTracker} />\r\n          <Route path='/React-Learn/Dijkstra' exact component={PathfindingVisualizer} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}